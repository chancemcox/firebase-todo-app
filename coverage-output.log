
> firebase-todo-app@0.0.0 test:coverage
> jest --coverage

FAIL src/components/__tests__/ProtectedRoute.test.jsx
  ‚óè Console

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 29 |[39m
     [90m 30 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 32 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 33 |[39m       {component}
     [90m 34 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/ProtectedRoute.test.jsx:31:16)
      at Object.renderWithRouter (src/components/__tests__/ProtectedRoute.test.jsx:53:7)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 29 |[39m
     [90m 30 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 32 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 33 |[39m       {component}
     [90m 34 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/ProtectedRoute.test.jsx:31:16)
      at Object.renderWithRouter (src/components/__tests__/ProtectedRoute.test.jsx:53:7)

  ‚óè ProtectedRoute Component ‚Ä∫ Edge Cases ‚Ä∫ handles currentUser with only falsy values

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/login"

    Number of calls: 0

    [0m [90m 558 |[39m       
     [90m 559 |[39m       [90m// Should still be treated as unauthenticated[39m
    [31m[1m>[22m[39m[90m 560 |[39m       expect(mockNavigate)[33m.[39mtoHaveBeenCalledWith([32m'/login'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 561 |[39m     })[33m;[39m
     [90m 562 |[39m   })[33m;[39m
     [90m 563 |[39m[0m

      at Object.toHaveBeenCalledWith (src/components/__tests__/ProtectedRoute.test.jsx:560:28)

FAIL src/contexts/__tests__/AuthContext.test.jsx
  ‚óè Console

    console.log
      Firebase config: {
        apiKey: 'AIzaSyBtK4DqP3HhCe_2z2SB1Yc7G5gSQng36ms',
        authDomain: 'todo.cox-fam.com',
        projectId: 'todo-list-e7788',
        storageBucket: 'todo-list-e7788.firebasestorage.app',
        messagingSenderId: '82740211196',
        appId: '1:82740211196:web:7297f087941f3fdb5f5679',
        measurementId: 'G-NMEYHYHE17'
      }

      at Object.log (src/firebase.js:15:9)

    console.log
      Firebase app initialized: {}

      at Object.log (src/firebase.js:19:9)

    console.log
      Firebase auth initialized: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at Object.log (src/firebase.js:23:9)

    console.log
      Firebase Firestore initialized: {}

      at Object.log (src/firebase.js:26:9)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 66 |[39m
     [90m 67 |[39m [36mconst[39m renderWithAuth [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 68 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 69 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 70 |[39m       [33m<[39m[33mAuthProvider[39m[33m>[39m
     [90m 71 |[39m         {component}[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithAuth (src/contexts/__tests__/AuthContext.test.jsx:68:16)
      at Object.renderWithAuth (src/contexts/__tests__/AuthContext.test.jsx:97:7)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 66 |[39m
     [90m 67 |[39m [36mconst[39m renderWithAuth [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 68 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 69 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 70 |[39m       [33m<[39m[33mAuthProvider[39m[33m>[39m
     [90m 71 |[39m         {component}[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithAuth (src/contexts/__tests__/AuthContext.test.jsx:68:16)
      at Object.renderWithAuth (src/contexts/__tests__/AuthContext.test.jsx:97:7)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User',
        photoURL: 'https://example.com/photo.jpg'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User',
        photoURL: 'https://example.com/photo.jpg'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Auth state changed: {
        uid: 'test-uid',
        email: 'test@example.com',
        displayName: 'Test User'
      }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Auth state changed: { uid: 'user1', email: 'user1@example.com', displayName: 'User 1' }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Auth state changed: { uid: 'user2', email: 'user2@example.com', displayName: 'User 2' }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: undefined

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Auth state changed: { uid: 'test-uid' }

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)
          at Array.forEach (<anonymous>)

    console.log
      AuthContext: Setting up auth state listener...

      at log (src/contexts/AuthContext.jsx:109:13)

    console.log
      AuthContext: Auth object: {
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at log (src/contexts/AuthContext.jsx:110:13)

    console.log
      AuthContext: onAuthStateChanged available: true

      at log (src/contexts/AuthContext.jsx:111:13)

    console.log
      AuthContext: Setting up listener...

      at log (src/contexts/AuthContext.jsx:122:17)

    console.log
      AuthContext: Auth state changed: null

      at log (src/contexts/AuthContext.jsx:124:19)

    console.log
      AuthContext: Listener set up successfully

      at log (src/contexts/AuthContext.jsx:128:17)

    console.log
      AuthContext: Cleaning up listener...

      at log (src/contexts/AuthContext.jsx:140:17)

  ‚óè AuthContext ‚Ä∫ Logout Functionality ‚Ä∫ calls Firebase signOut when logout is triggered

    TypeError: Cannot read properties of undefined (reading 'user')

    [0m [90m 32 |[39m       
     [90m 33 |[39m       [90m// Update profile with display name[39m
    [31m[1m>[22m[39m[90m 34 |[39m       [36mawait[39m updateProfile(result[33m.[39muser[33m,[39m { displayName })[33m;[39m
     [90m    |[39m                                  [31m[1m^[22m[39m
     [90m 35 |[39m       
     [90m 36 |[39m       [90m// Create user document in Firestore[39m
     [90m 37 |[39m       [36mawait[39m setDoc(doc(db[33m,[39m [32m'users'[39m[33m,[39m result[33m.[39muser[33m.[39muid)[33m,[39m {[0m

      at user (src/contexts/AuthContext.jsx:34:34)

  ‚óè AuthContext ‚Ä∫ User Profile Management ‚Ä∫ updates user profile when user data changes

    Logout failed

    [0m [90m 350 |[39m
     [90m 351 |[39m     it([32m'handles logout errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 352 |[39m       signOut[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Logout failed'[39m))[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 353 |[39m       
     [90m 354 |[39m       [36mlet[39m authCallback[33m;[39m
     [90m 355 |[39m       [36mconst[39m mockUser [33m=[39m {[0m

      at Object.<anonymous> (src/contexts/__tests__/AuthContext.test.jsx:352:33)

  ‚óè AuthContext ‚Ä∫ User Profile Management ‚Ä∫ updates user profile when user data changes

    TypeError: Cannot read properties of undefined (reading 'user')

    [0m [90m 32 |[39m       
     [90m 33 |[39m       [90m// Update profile with display name[39m
    [31m[1m>[22m[39m[90m 34 |[39m       [36mawait[39m updateProfile(result[33m.[39muser[33m,[39m { displayName })[33m;[39m
     [90m    |[39m                                  [31m[1m^[22m[39m
     [90m 35 |[39m       
     [90m 36 |[39m       [90m// Create user document in Firestore[39m
     [90m 37 |[39m       [36mawait[39m setDoc(doc(db[33m,[39m [32m'users'[39m[33m,[39m result[33m.[39muser[33m.[39muid)[33m,[39m {[0m

      at user (src/contexts/AuthContext.jsx:34:34)

PASS src/pages/__tests__/Register.test.jsx
  ‚óè Console

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 30 |[39m
     [90m 31 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 32 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 33 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 34 |[39m       {component}
     [90m 35 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/pages/__tests__/Register.test.jsx:32:16)
      at Object.renderWithRouter (src/pages/__tests__/Register.test.jsx:50:7)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 30 |[39m
     [90m 31 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 32 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 33 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 34 |[39m       {component}
     [90m 35 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/pages/__tests__/Register.test.jsx:32:16)
      at Object.renderWithRouter (src/pages/__tests__/Register.test.jsx:50:7)

    console.error
      Signup error: { code: 'auth/invalid-email', message: 'Invalid email address.' }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Signup error: { code: 'auth/email-already-in-use', message: 'Email already in use' }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Signup error: TypeError: Cannot read properties of undefined (reading 'user')
          at user (/home/runner/work/firebase-todo-app/firebase-todo-app/src/pages/Register.jsx:85:34)

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Signup error: {
        code: 'auth/email-already-in-use',
        message: 'An account with this email already exists'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Signup error: {
        code: 'auth/weak-password',
        message: 'Password is too weak. Please choose a stronger password'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Signup error: { code: 'auth/invalid-email', message: 'Invalid email address' }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Signup error: {
        code: 'auth/operation-not-allowed',
        message: 'Email/password accounts are not enabled'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

    console.error
      Google signup error: {
        code: 'auth/popup-closed-by-user',
        message: 'Sign-up popup was closed'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:106:15)

    console.error
      Signup error: {
        code: 'auth/network-request-failed',
        message: 'Network error. Please check your connection'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Register.jsx:88:15)

PASS src/pages/__tests__/Login.test.jsx
  ‚óè Console

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 23 |[39m
     [90m 24 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 25 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 26 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 27 |[39m       {component}
     [90m 28 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/pages/__tests__/Login.test.jsx:25:16)
      at Object.renderWithRouter (src/pages/__tests__/Login.test.jsx:41:7)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 23 |[39m
     [90m 24 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 25 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 26 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 27 |[39m       {component}
     [90m 28 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/pages/__tests__/Login.test.jsx:25:16)
      at Object.renderWithRouter (src/pages/__tests__/Login.test.jsx:41:7)

    console.error
      Login error: Error: Invalid credentials
          at Object.<anonymous> (/home/runner/work/firebase-todo-app/firebase-todo-app/src/pages/__tests__/Login.test.jsx:82:47)
          at Promise.then.completed (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:316:40)
          at _runTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/testWorker.js:106:12)

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

    console.error
      Login error: { code: 'auth/user-not-found', message: 'User not found' }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

    console.error
      Login error: {
        code: 'auth/user-not-found',
        message: 'No account found with this email'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

    console.error
      Login error: { code: 'auth/wrong-password', message: 'Incorrect password' }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

    console.error
      Login error: {
        code: 'auth/too-many-requests',
        message: 'Too many failed attempts. Please try again later'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

    console.error
      Login error: {
        code: 'auth/network-request-failed',
        message: 'Network error. Please check your connection'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

    console.log
      Starting Google sign-in...

      at log (src/pages/Login.jsx:77:15)

    console.log
      Google sign-in successful: { user: { uid: 'google-uid', email: 'test@gmail.com' } }

      at log (src/pages/Login.jsx:83:17)

    console.log
      Starting Google sign-in...

      at log (src/pages/Login.jsx:77:15)

    console.log
      Google sign-in successful: { user: { uid: 'google-uid', email: 'test@gmail.com' } }

      at log (src/pages/Login.jsx:83:17)

    console.log
      Starting Google sign-in...

      at log (src/pages/Login.jsx:77:15)

    console.error
      Google login error: { code: 'auth/popup-blocked', message: 'Popup blocked by browser' }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:92:15)

    console.log
      Starting Google sign-in...

      at log (src/pages/Login.jsx:77:15)

    console.error
      Login error: {
        code: 'auth/network-request_failed',
        message: 'Network error. Please check your connection'
      }

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/pages/Login.jsx:63:15)

PASS src/components/__tests__/Navigation.test.jsx
  ‚óè Console

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 20 |[39m
     [90m 21 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 22 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 23 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 24 |[39m       {component}
     [90m 25 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/Navigation.test.jsx:22:16)
      at Object.renderWithRouter (src/components/__tests__/Navigation.test.jsx:51:7)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 20 |[39m
     [90m 21 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 22 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 23 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 24 |[39m       {component}
     [90m 25 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/Navigation.test.jsx:22:16)
      at Object.renderWithRouter (src/components/__tests__/Navigation.test.jsx:51:7)

PASS src/components/__tests__/TodoList.test.jsx
PASS src/components/__tests__/UserProfile.test.jsx
  ‚óè Console

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 34 |[39m
     [90m 35 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 36 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 37 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 38 |[39m       {component}
     [90m 39 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/UserProfile.test.jsx:36:16)
      at Object.renderWithRouter (src/components/__tests__/UserProfile.test.jsx:75:7)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 34 |[39m
     [90m 35 |[39m [36mconst[39m renderWithRouter [33m=[39m (component) [33m=>[39m {
    [31m[1m>[22m[39m[90m 36 |[39m   [36mreturn[39m render(
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 37 |[39m     [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 38 |[39m       {component}
     [90m 39 |[39m     [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/UserProfile.test.jsx:36:16)
      at Object.renderWithRouter (src/components/__tests__/UserProfile.test.jsx:75:7)

    console.error
      Error listening to user profile: Error: Firestore error
          at /home/runner/work/firebase-todo-app/firebase-todo-app/src/components/__tests__/UserProfile.test.jsx:205:23
          at /home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-mock/build/index.js:397:39
          at /home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-mock/build/index.js:404:13
          at mockConstructor (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-mock/build/index.js:148:19)
          at /home/runner/work/firebase-todo-app/firebase-todo-app/src/components/UserProfile.jsx:25:37
          at commitHookEffectListMount (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react/cjs/react.development.js:2667:24)
          at act (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/react/cjs/react.development.js:2582:11)
          at /home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/@testing-library/react/dist/pure.js:180:26)
          at render (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/@testing-library/react/dist/pure.js:271:10)
          at renderWithRouter (/home/runner/work/firebase-todo-app/firebase-todo-app/src/components/__tests__/UserProfile.test.jsx:36:16)
          at Object.renderWithRouter (/home/runner/work/firebase-todo-app/firebase-todo-app/src/components/__tests__/UserProfile.test.jsx:209:7)
          at Promise.then.completed (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:316:40)
          at _runTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/testWorker.js:106:12)

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/components/UserProfile.jsx:42:17)
      at errorCallback (src/components/__tests__/UserProfile.test.jsx:205:9)
      at src/components/UserProfile.jsx:25:37
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at renderWithRouter (src/components/__tests__/UserProfile.test.jsx:36:16)
      at Object.renderWithRouter (src/components/__tests__/UserProfile.test.jsx:209:7)

    console.error
      Error updating profile: Error: Update failed
          at Object.<anonymous> (/home/runner/work/firebase-todo-app/firebase-todo-app/src/components/__tests__/UserProfile.test.jsx:218:35)
          at Promise.then.completed (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:316:40)
          at _runTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/runTest.js:444:34)
          at Object.worker (/home/runner/work/firebase-todo-app/firebase-todo-app/node_modules/jest-runner/build/testWorker.js:106:12)

    [0m [90m 127 |[39m       [36mreturn[39m[33m;[39m
     [90m 128 |[39m     }
    [31m[1m>[22m[39m[90m 129 |[39m     originalError[33m.[39mcall(console[33m,[39m [33m...[39margs)[33m;[39m
     [90m     |[39m                   [31m[1m^[22m[39m
     [90m 130 |[39m   }[33m;[39m
     [90m 131 |[39m })[33m;[39m
     [90m 132 |[39m[0m

      at console.call [as error] (src/setupTests.js:129:19)
      at error (src/components/UserProfile.jsx:69:15)

PASS src/components/__tests__/DateTimeModal.test.jsx
PASS src/components/__tests__/import-test.test.jsx
  ‚óè Console

    console.log
      Firebase config: {
        apiKey: 'AIzaSyBtK4DqP3HhCe_2z2SB1Yc7G5gSQng36ms',
        authDomain: 'todo.cox-fam.com',
        projectId: 'todo-list-e7788',
        storageBucket: 'todo-list-e7788.firebasestorage.app',
        messagingSenderId: '82740211196',
        appId: '1:82740211196:web:7297f087941f3fdb5f5679',
        measurementId: 'G-NMEYHYHE17'
      }

      at Object.log (src/firebase.js:15:9)

    console.log
      Firebase app initialized: {}

      at Object.log (src/firebase.js:19:9)

    console.log
      Firebase auth initialized: {
        currentUser: {
          uid: 'test-user-id',
          email: 'test@example.com',
          displayName: 'Test User',
          photoURL: null
        },
        onAuthStateChanged: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signInWithPopup: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        },
        signOut: [Function: mockConstructor] {
          _isMockFunction: true,
          getMockImplementation: [Function (anonymous)],
          mock: [Getter/Setter],
          mockClear: [Function (anonymous)],
          mockReset: [Function (anonymous)],
          mockRestore: [Function (anonymous)],
          mockReturnValueOnce: [Function (anonymous)],
          mockResolvedValueOnce: [Function (anonymous)],
          mockRejectedValueOnce: [Function (anonymous)],
          mockReturnValue: [Function (anonymous)],
          mockResolvedValue: [Function (anonymous)],
          mockRejectedValue: [Function (anonymous)],
          mockImplementationOnce: [Function (anonymous)],
          withImplementation: [Function: bound withImplementation],
          mockImplementation: [Function (anonymous)],
          mockReturnThis: [Function (anonymous)],
          mockName: [Function (anonymous)],
          getMockName: [Function (anonymous)]
        }
      }

      at Object.log (src/firebase.js:23:9)

    console.log
      Firebase Firestore initialized: {}

      at Object.log (src/firebase.js:26:9)

PASS src/components/__tests__/minimal.test.jsx
  ‚óè Console

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition.

    [0m [90m 13 |[39m
     [90m 14 |[39m   it([32m'should render with router context'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 15 |[39m     render(
     [90m    |[39m           [31m[1m^[22m[39m
     [90m 16 |[39m       [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 17 |[39m         [33m<[39m[33mSimpleComponent[39m [33m/[39m[33m>[39m
     [90m 18 |[39m       [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:26:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at Object.<anonymous> (src/components/__tests__/minimal.test.jsx:15:11)

    console.warn
      ‚ö†Ô∏è React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath.

    [0m [90m 13 |[39m
     [90m 14 |[39m   it([32m'should render with router context'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 15 |[39m     render(
     [90m    |[39m           [31m[1m^[22m[39m
     [90m 16 |[39m       [33m<[39m[33mBrowserRouter[39m[33m>[39m
     [90m 17 |[39m         [33m<[39m[33mSimpleComponent[39m [33m/[39m[33m>[39m
     [90m 18 |[39m       [33m<[39m[33m/[39m[33mBrowserRouter[39m[33m>[39m[0m

      at warn (node_modules/react-router/lib/deprecations.ts:9:13)
      at warnOnce (node_modules/react-router/lib/deprecations.ts:14:3)
      at Object.logDeprecation [as UNSAFE_logV6DeprecationWarnings] (node_modules/react-router/lib/deprecations.ts:37:5)
      at logV6DeprecationWarnings (node_modules/react-router-dom/index.tsx:816:25)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:180:26)
      at render (node_modules/@testing-library/react/dist/pure.js:271:10)
      at Object.<anonymous> (src/components/__tests__/minimal.test.jsx:15:11)

PASS src/components/__tests__/simple.test.js
PASS src/components/__tests__/TodoStats.test.jsx
---------------------|---------|----------|---------|---------|----------------------------------------------------------------------------------------------------------------------------
File                 | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                          
---------------------|---------|----------|---------|---------|----------------------------------------------------------------------------------------------------------------------------
All files            |   49.37 |    58.39 |   44.13 |      50 |                                                                                                                            
 src                 |   41.93 |    26.66 |       0 |   43.33 |                                                                                                                            
  App.jsx            |       0 |        0 |       0 |       0 | 14-29                                                                                                                      
  firebase.js        |   56.52 |    36.36 |       0 |   59.09 | 37-38,43-63                                                                                                                
 src/components      |   53.23 |    61.68 |   48.64 |   54.95 |                                                                                                                            
  DateTimeModal.jsx  |   44.04 |    54.54 |   29.41 |    43.2 | 13-18,34-36,40-42,46-48,53-79,83-88,93-94,107,146-164,212-231                                                              
  Navigation.jsx     |   48.57 |    82.14 |      50 |   48.57 | 9-12,32-35,63-64,100-101,149-215                                                                                           
  ProtectedRoute.jsx |     100 |    91.66 |     100 |     100 | 10                                                                                                                         
  TodoList.jsx       |   35.91 |    50.51 |      25 |   38.28 | 56-58,64-66,71-102,107-115,120-124,129-138,143-148,153-155,160-165,170-175,186-209,217-218,242-248,279-391,417,462,523-564 
  TodoStats.jsx      |      70 |     67.3 |   88.88 |   73.01 | 106-108,114-116,137-143,257-266                                                                                            
  UserProfile.jsx    |   82.25 |    67.92 |   85.71 |    86.2 | 32,50-52,119,130,159-160                                                                                                   
 src/contexts        |   55.38 |    45.45 |   72.72 |   55.38 |                                                                                                                            
  AuthContext.jsx    |   55.38 |    45.45 |   72.72 |   55.38 | 25,28,53,60,66-102,115-117,130-135,143                                                                                     
 src/pages           |   81.32 |    60.97 |   89.47 |   80.74 |                                                                                                                            
  Login.jsx          |      80 |    58.53 |   88.88 |    79.1 | 20-38,55-57,99                                                                                                             
  Register.jsx       |   82.29 |    63.41 |      90 |   81.91 | 19-37,113,184-185,206-207,228-229                                                                                          
 src/services        |       0 |        0 |       0 |       0 |                                                                                                                            
  todoService.js     |       0 |        0 |       0 |       0 | 16-142                                                                                                                     
 src/store           |       0 |        0 |       0 |       0 |                                                                                                                            
  index.js           |       0 |      100 |       0 |       0 | 4-9                                                                                                                        
  todoSlice.js       |       0 |        0 |       0 |       0 | 10-182                                                                                                                     
---------------------|---------|----------|---------|---------|----------------------------------------------------------------------------------------------------------------------------
Jest: "global" coverage threshold for statements (70%) not met: 49.37%
Jest: "global" coverage threshold for branches (70%) not met: 58.39%
Jest: "global" coverage threshold for lines (70%) not met: 50%
Jest: "global" coverage threshold for functions (70%) not met: 44.13%

Test Suites: 2 failed, 10 passed, 12 total
Tests:       3 failed, 143 passed, 146 total
Snapshots:   0 total
Time:        6.746 s
Ran all test suites.
